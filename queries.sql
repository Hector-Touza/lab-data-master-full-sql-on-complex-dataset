// DQL – Consultas de validación y exploración

-- 1. Ver cuántos registros tienen al menos un campo importante nulo
SELECT COUNT(*) AS NUM_REGISTROS_NULOS
FROM S_ORDERS_TRANSFORMED
WHERE DTE_ORDER IS NULL 
   OR QTY_ORDERED IS NULL
   OR AMT_TOTAL IS NULL
   OR REF_PAYMENT_METHOD IS NULL;
-- devuelve 882 (de 1001)

-- 2. Pedidos con descuento y alto importe
SELECT ID_ORDER, AMT_TOTAL, REF_DISCOUNT_CODE
FROM S_ORDERS_TRANSFORMED
WHERE REF_DISCOUNT_CODE IS NOT NULL AND AMT_TOTAL > 1000;

-- 3. Clientes VIP con pedidos incompletos
SELECT *
FROM S_ORDERS_TRANSFORMED
WHERE TYP_CUSTOMER_SEGMENT = 'VIP' AND QTY_UNITS_BACKORDER > 0;

// TCL – Transacciones
BEGIN;

UPDATE S_ORDERS_TRANSFORMED
SET AMT_TOTAL = AMT_TOTAL * 0.95
WHERE REF_DISCOUNT_CODE = 'BLACKFRIDAY';

ROLLBACK;

-- Confirmar descuento si revisado
UPDATE S_ORDERS_TRANSFORMED
SET AMT_TOTAL = AMT_TOTAL * 0.95
WHERE REF_DISCOUNT_CODE = 'BLACKFRIDAY';

COMMIT;

//DCL – Control de acceso
GRANT SELECT, INSERT ON S_ORDERS_TRANSFORMED TO ROLE BI_ANALYST;

REVOKE INSERT ON S_ORDERS_TRANSFORMED FROM ROLE BI_ANALYST;

// ¿Qué % de registros contenía errores en las fechas o cantidades?
SELECT COUNT(ID_CUSTOMER)
FROM S_ORDERS_TRANSFORMED
WHERE TRY_TO_DATE(DTE_ORDER) IS NULL
OR TRY_TO_DATE(DTE_DELIVERY_EST) IS NULL
OR TRY_TO_NUMBER(QTY_ORDERED) IS NULL
OR TRY_TO_NUMBER(QTY_UNITS_BACKORDER) IS NULL;

// ¿Qué métodos de pago son más comunes en pedidos de +1000 EUR?
SELECT REF_PAYMENT_METHOD,
COUNT(ID_ORDER)
FROM S_ORDERS_TRANSFORMED
WHERE AMT_TOTAL > 1000
GROUP BY REF_PAYMENT_METHOD
ORDER BY COUNT(ID_ORDER) DESC;

//¿Cuál es el segmento de cliente con más backorders?
SELECT TYP_CUSTOMER_SEGMENT,
SUM(QTY_UNITS_BACKORDER)
FROM S_ORDERS_TRANSFORMED
GROUP BY TYP_CUSTOMER_SEGMENT
ORDER BY SUM(QTY_UNITS_BACKORDER) DESC;

// ¿Cuántos registros fueron descartados durante limpieza?
SELECT COUNT(ID_ORDER) FROM B_ORDERS_RAW_COMPLEX_WIDE;
SELECT COUNT(ID_ORDER) FROM S_ORDERS_TRANSFORMED;
